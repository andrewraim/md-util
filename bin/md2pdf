#!/bin/bash

PROG_NAME=$(basename $0)
BIN_DIR=$(dirname $0)
BASE_DIR=$(dirname $BIN_DIR)
PANDOC_DIR=$BASE_DIR/pandoc

print_help() {
cat << EOF
$PROG_NAME

Use Pandoc to render a Latex document (PDF) from a Markdown file. Includes the
following customizations:
  - Use Pandoc config files from the md-util folder from which $PROG_NAME was
    invoked: $BASE_DIR
  - Use a "post" document format, which is suitable for informal posts rather
    than formal documents.
  - Enable pandoc-citeproc for citations to references
  - Enable hyperlinking of citations
  - Give the references section a title

Usage: $PROG_NAME [OPTIONS] input

OPTIONS:
  -h     Print this message and exit
  -q     Quiet - do not echo Pandoc command
EOF
}

QUIET=false

# Get the options
while getopts "hq" option; do
	case $option in
		h)
			print_help
			exit
			;;
		q)
			QUIET=true
			;;
	esac
done

# Remaining argument should be the name of the markdown file for input
shift $(($OPTIND - 1))
INPUT=$1
EXT=${INPUT##*.}

if [ -z "$INPUT" ]; then
	echo "No input file was specified"
	exit
fi

# Name the output file
if [ $INPUT != $EXT ]; then
	# Replace extension of input file with "pdf"
	OUTPUT=${INPUT%$EXT}pdf
else
	# There was no extension on input file, so add a ".pdf" to the output
	OUTPUT=${INPUT}.pdf
fi

read -r -d '' CMD << EOM
pandoc $INPUT \
  --data-dir=$PANDOC_DIR \
  --defaults=my-latex \
  --template=post.latex \
  --filter pandoc-citeproc \
  --metadata link-citations=true \
  --metadata reference-section-title=References \
  -f markdown -t latex -s -o $OUTPUT
EOM

# Echo the pandoc command unless we're supposed to be quiet
if [ $QUIET == "false" ]; then
	echo $CMD
fi

$CMD

